// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: status.sql

package db

import (
	"context"
)

const listStatus = `-- name: ListStatus :many
SELECT
    id, name
FROM
    "status"
`

func (q *Queries) ListStatus(ctx context.Context) ([]Status, error) {
	rows, err := q.db.QueryContext(ctx, listStatus)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Status{}
	for rows.Next() {
		var i Status
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
