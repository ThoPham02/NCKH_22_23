// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: faculity.sql

package db

import (
	"context"
)

const getFaculityByID = `-- name: GetFaculityByID :one
SELECT id, name FROM "faculity"
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetFaculityByID(ctx context.Context, id int64) (Faculity, error) {
	row := q.db.QueryRowContext(ctx, getFaculityByID, id)
	var i Faculity
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getListFaculity = `-- name: GetListFaculity :many
SELECT id, name FROM "faculity"
`

func (q *Queries) GetListFaculity(ctx context.Context) ([]Faculity, error) {
	rows, err := q.db.QueryContext(ctx, getListFaculity)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Faculity{}
	for rows.Next() {
		var i Faculity
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
