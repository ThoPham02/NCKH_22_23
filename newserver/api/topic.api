type (
	Result {
		Code    int64  `json:"code"`
		Message string `json:"message"`
	}
	Department {
		ID        int64  `json:"id"`
		Name      string `json:"name"`
		FacultyID int64  `json:"facultyID"`
	}
	Faculty {
		ID   int64  `json:"id"`
		Name string `json:"name"`
	}
	LectureInfo {
		ID     int64  `json:"id"`
		Name   string `json:"name"`
		Email  string `json:"email"`
		Phone  string `json:"phone"`
		Degree string `json:"degree"`
	}
	StudentInfo {
		ID    int64  `json:"id"`
		Name  string `json:"name"`
		Email string `json:"email"`
		Phone string `json:"phone"`
	}

	Topic {
		ID              int64       `json:"id"`
		Name            string      `json:"name"`
		LectureInfo     LectureInfo `json:"lectureInfo"`
		DepartmentID    int64       `json:"departmentID"`
		Status          int64       `json:"status"`
		EventId         int64       `json:"eventId"`
		SubcommitteeID  int64       `json:"subcommitteeID"`
		TimeStart       int64       `json:"timeStart"`
		TimeEnd         int64       `json:"timeEnd"`
		GroupStudentId  int64       `json:"groupStudentId"`
		EstimateStudent int64       `json:"estimateStudent"`
		Description     string      `json:"description"`
	}
	Student {
		StudentID int64  `json:"studentID"`
		Name      string `json:"name"`
		EventID   int64  `json:"eventID"`
		GroupID   int64  `json:"groupID"`
	}
	Event {
		ID         int64  `json:"id"`
		Name       string `json:"name"`
		SchoolYear string `json:"schoolYear"`
		IsCurrent  int64  `json:"isCurrent"`
	}
	Subcommittee {
		ID        int64  `json:"id"`
		Name      string `json:"name"`
		FacultyID int64  `json:"facultyID"`
		EventID   int64  `json:"eventID"`
		Level     int64  `json:"level"`
	}
	Report {
		ID          int64  `json:"id"`
		TopicID     int64  `json:"topicID"`
		StageID     int64  `json:"stageID"`
		Description string `json:"description"`
		CreatedAt   int64  `json:"createdAt"`
		CreatedBy   int64  `json:"createdBy"`
	}
	Mark {
		ID          int64       `json:"id"`
		TopicID     int64       `json:"topicID"`
		LectureInfo LectureInfo `json:"lectureInfo"`
		Point       float64     `json:"point"`
		Comment     string      `json:"comment"`
		Url         string      `json:"url"`
		Level       int64       `json:"level"`
		CreatedAt   int64       `json:"createdAt"`
	}
)

type (
	GetDepartmentsReq {
		FacultyID int64 `form:"facultyID, optional"`
	}
	GetDepartmentsRes {
		Result      Result       `json:"result"`
		Departments []Department `json:"departments"`
	}
)

type (
	CreateDepartmentReq {
		Name string `json:"name"`
	}

	CreateDepartmentRes {
		Result Result `json:"result"`
	}
)

type (
	GetFacultiesReq {
	}
	GetFacultiesRes {
		Result    Result    `json:"result"`
		Faculties []Faculty `json:"faculties"`
	}
)

type (
	CreateFacultyReq {
		Name      string `json:"name"`
		FacultyID int64  `json:"facultyID"`
	}

	CreateFacultyRes {
		Result Result `json:"result"`
	}
)

type (
	CreateTopicReq {
		Name            string `json:"name"`
		LectureID       int64  `json:"lectureID"`
		DepartmentID    int64  `json:"departmentID"`
		EstimateStudent int64  `json:"estimateStudent"`
		Description     string `json:"description"`
	}
	CreateTopicRes {
		Result Result `json:"result"`
	}
)

type (
	UpdateTopicReq {
		ID             int64  `path:"id"`
		Name           string `json:"name"`
		LectureID      int64  `json:"lectureID"`
		DepartmentID   int64  `json:"departmentID"`
		Status         int64  `json:"status"`
		EventID        int64  `json:"eventID"`
		SubcommitteeID int64  `json:"subcommitteeID"`
		GroupID        int64  `json:"groupID"`
		TimeStart      int64  `json:"timeStart"`
		TimeEnd        int64  `json:"timeEnd"`
		CashSupport    int64  `json:"cashSupport"`
		Description    string `json:"description"`
	}
	UpdateTopicRes {
		Result Result `json:"result"`
	}
)

type (
	UpdateTopicStatusReq {
		ID     int64 `path:"id"`
		Status int64 `json:"status"`
	}
	UpdateTopicStatusRes {
		Result Result `json:"result"`
	}
)

type (
	UpdateTopicSubcommitteeReq {
		ListTopicID    []int64 `json:"listTopicID"`
		SubcommitteeID int64   `json:"subcommitteeID"`
	}
	UpdateTopicSubcommitteeRes {
		Result Result `json:"result"`
	}
)

type (
	UpdateTopicStudentGroupReq {
		ID        int64 `path:"id"`
		StudentID int64 `json:"studentID"`
	}
	UpdateTopicStudentGroupRes {
		Result Result `json:"result"`
	}
)

type (
	GetTopicReq {
		ID int64 `path:"id"`
	}
	GetTopicRes {
		Result       Result       `json:"result"`
		Topic        Topic        `json:"topic"`
		Event        Event        `json:"event"`
		Subcommittee Subcommittee `json:"subcommittee"`
		Reports      []Report     `json:"reports"`
		Marks        []Mark       `json:"marks"`
		ListStudent  []Student    `json:"listStudent"`
	}
)

type (
	DeleteStudentGroupbyStudentIdReq {
		StudentID int64 `path:"studentID"`
	}
	DeleteStudentGroupbyStudentIdRes {
		Result Result `json:"result"`
	}
)

type (
	GetTopicsReq {
		Search         string `form:"search, optional"`
		DepartmentID   int64  `form:"departmentID, optional"`
		FacultyID      int64  `form:"facultyID, optional"`
		Status         int64  `form:"status, optional"`
		LectureID      int64  `form:"lectureID, optional"`
		StudentID      int64  `form:"studentID, optional"`
		IsCurrent      int64  `form:"isCurrent, optional"`
		EventID        int64  `form:"eventID, optional"`
		SubcommitteeID int64  `form:"subcommitteeID, optional"`
		TimeStart      int64  `form:"timeStart, optional"`
		TimeEnd        int64  `form:"timeEnd, optional"`
		Limit          int64  `form:"limit, optional"`
		Offset         int64  `form:"offset, optional"`
	}
	GetTopicsRes {
		Result Result  `json:"result"`
		Total  int64   `json:"total"`
		Topics []Topic `json:"topic"`
	}
)

service topic-api {
	
	@handler GetDepartmentsHandler
	get /api/departments (GetDepartmentsReq) returns(GetDepartmentsRes)
	
	@handler CreateDepartmentHandler
	post /api/department (CreateDepartmentReq) returns(CreateDepartmentRes)
	
	@handler GetFacultiesHandler
	get /api/faculties (GetFacultiesReq) returns(GetFacultiesRes)
	
	@handler CreateFacultyHandler
	post /api/faculty (CreateFacultyReq) returns(CreateFacultyRes)
	
	@handler GetTopicsHandler
	get /api/topics (GetTopicsReq) returns(GetTopicsRes)
	
	@handler GetTopicHandler
	get /api/topic/:id (GetTopicReq) returns(GetTopicRes)
	
	@handler CreateTopicHandler
	post /api/topic (CreateTopicReq) returns(CreateTopicRes)
	
	@handler UpdateTopicHandler
	put /api/topic/:id (UpdateTopicReq) returns(UpdateTopicRes)
	@handler UpdateTopicStatusHandler
	put /api/topic-status/:id (UpdateTopicStatusReq) returns(UpdateTopicStatusRes)
	
	@handler UpdateTopicSubcommitteeHandler
	put /api/topic-subcommittee (UpdateTopicSubcommitteeReq) returns(UpdateTopicSubcommitteeRes)
	
	@handler UpdateTopicStudentGroupHandler
	put /api/topic-student-group/:id (UpdateTopicStudentGroupReq) returns(UpdateTopicStudentGroupRes)
	
	@handler DeleteStudentGroupHandler
	delete /api/topic-student-group/:studentID (DeleteStudentGroupbyStudentIdReq) returns(DeleteStudentGroupbyStudentIdRes)
}