type (
	Result {
		Code    int64  `json:"code"`
		Message string `json:"message"`
	}
	User {
		ID           int64  `json:"id"`
		Username     string `json:"username"`
		Role         int64  `json:"role"`
		Name         string `json:"name"`
		Email        string `json:"email"`
		Phone        string `json:"phone"`
		FacultyID    int64  `json:"faculty_id"`
		DepartmentID int64  `json:"department_id"`
		YearStart    int64  `json:"year_start"`
		Degree       int64  `json:"degree"`
		AvatarUrl    string `json:"avatar"`
		Birthday     string `json:"birthday"`
		BankAccount  string `json:"bank_account"`
	}

	LoginReq {
		Username string `json:"username"` //	username
		Password string `json:"password"` // 	password
	}

	Token {
		RefreshToken string `json:"refreshToken"`
		AccessToken  string `json:"accessToken"`
	}

	LoginRes {
		Result   Result `json:"result"`    // 	response result
		Token    Token  `json:"authToken"` // 	jwttoken for api
		UserInfo User   `json:"user"`      //  info user
	}

	MemberSubcommitteesReq {
		Name      string `form:"name, optional"` // name
		Role      int64  `form:"role, optional"` // role
		FacultyID int64  `form:"faculty_id, optional"`
	}
	MemberSubcommittee {
		ID     int64  `json:"id"`
		Name   string `json:"name"`
		Degree int64  `json:"degree"`
	}
	MemberSubcommitteesRes {
		Result  Result               `json:"result"`
		Members []MemberSubcommittee `json:"members"`
	}
)

type (
	RegisterReq {
		Username     string `json:"username"`
		Password     string `json:"password"`
		Name         string `json:"name"`
		Role         int64  `json:"role"`
		Email        string `json:"email"`
		Phone        string `json:"phone"`
		FacultyID    int64  `json:"faculty_id"`
		DepartmentID int64  `json:"department_id"`
		YearStart    int64  `json:"year_start"`
		Degree       int64  `json:"degree"`
		AvatarUrl    string `json:"avatar_url"`
		Birthday     string `json:"birthday"`
		BankAccount  string `json:"bank_account"`
	}
	RegisterRes {
		Result Result `json:"result"`
	}
)

type (
	GetUsersReq {
	}

	GetUsersRes {
		Result Result `json:"result"`
		Total  int64  `json:"total"`
		Users  []User `json:"users"`
	}
)

type (
	ResetReq {
	}

	ResetRes {
		Result Result `json:"result"`
	}
)

service account-api {
	
	@handler LoginHandler
	post /user/login (LoginReq) returns(LoginRes)
	
	@handler RegisterHandler
	post /user/register (RegisterReq) returns(RegisterRes)
	
	@handler GetUsersHandler
	get /user/find (GetUsersReq) returns(GetUsersRes)
	
	@handler ResetPasswordHandler
	put /user/reset (ResetReq) returns(ResetRes)
	
	@handler GetMemberSubcommittee
	get /user/subcommittee (MemberSubcommitteesReq) returns(MemberSubcommitteesRes)
}