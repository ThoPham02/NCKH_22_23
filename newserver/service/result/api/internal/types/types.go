// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

type Subcommittee struct {
	Name      string `json:"name"`
	FacultyID string `json:"facultyID"`
}

type Group struct {
	SubcommitteeId int64 `json:"subcommitteeID"`
	LectureId      int64 `json:"lectureID"`
	Role           int64 `json:"role"`
}

type TopicMark struct {
	TopicID   int64   `json:"topicID"`
	LectureID int64   `json:"lectureID"`
	Point     float64 `json:"point"`
	Comment   string  `json:"comment"`
	Url       string  `json:"url"`
}

type GetSubcommitteesReq struct {
}

type GetSubcommitteesRes struct {
	Result        Result         `json:"result"`
	Total         int64          `json:"total"`
	Subcommittees []Subcommittee `json:"subcommittees"`
}

type LectureGroup struct {
	LectureID int   `json:"lectureID"`
	Role      int64 `json:"role"`
}

type CreateSubcommitteeReq struct {
	Name         string         `json:"name"`
	ListLectures []LectureGroup `json:"listLectures"`
}

type CreateSubcommitteeRes struct {
	Result Result `json:"result"`
}

type GetTopicMarksReq struct {
}

type GetTopicMarksRes struct {
	Result     Result      `json:"result"`
	Total      int64       `json:"total"`
	TopicMarks []TopicMark `json:"topicMarks"`
}

type CreateTopicMarkReq struct {
	TopicID   int64   `json:"topicID"`
	LectureID int64   `json:"lectureID"`
	Point     float64 `json:"point"`
	Comment   string  `json:"comment"`
	Url       string  `json:"url"`
}

type CreateTopicMarkRes struct {
	Result Result `json:"result"`
}
