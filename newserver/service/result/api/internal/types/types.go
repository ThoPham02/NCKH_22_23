// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

type Subcommittee struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	FacultyID int64  `json:"facultyID"`
	EventID   int64  `json:"eventID"`
}

type Group struct {
	ID             int64 `json:"id"`
	SubcommitteeId int64 `json:"subcommitteeID"`
	LectureId      int64 `json:"lectureID"`
	Role           int64 `json:"role"`
}

type TopicMark struct {
	ID        int64   `json:"id"`
	TopicID   int64   `json:"topicID"`
	LectureID int64   `json:"lectureID"`
	Point     float64 `json:"point"`
	Comment   string  `json:"comment"`
	Url       string  `json:"url"`
}

type GetSubcommitteesReq struct {
}

type GetSubcommitteesRes struct {
	Result        Result         `json:"result"`
	Total         int64          `json:"total"`
	Subcommittees []Subcommittee `json:"subcommittees"`
}

type LectureGroup struct {
	LectureID int64 `json:"lectureID"`
	Role      int64 `json:"role"`
}

type CreateSubcommitteeReq struct {
	Name         string         `json:"name"`
	ListLectures []LectureGroup `json:"listLectures"`
	FacultyID    int64          `json:"facultyID"`
	EventID      int64          `json:"eventID"`
}

type CreateSubcommitteeRes struct {
	Result Result `json:"result"`
}

type GetTopicMarksReq struct {
}

type GetTopicMarksRes struct {
	Result     Result      `json:"result"`
	Total      int64       `json:"total"`
	TopicMarks []TopicMark `json:"topicMarks"`
}

type CreateTopicMarkReq struct {
	TopicID   int64   `json:"topicID"`
	LectureID int64   `json:"lectureID"`
	Point     float64 `json:"point"`
	Comment   string  `json:"comment"`
	Url       string  `json:"url"`
}

type CreateTopicMarkRes struct {
	Result Result `json:"result"`
}

type MarkDetail struct {
	MarkID    int64   `json:"mark_id"`
	Comment   string  `json:"comment"`
	LectureID int64   `json:"lecture_id"`
	Point     float64 `json:"point"`
}

type Topic struct {
	TopicID   int64        `json:"topic_id"`
	TopicName string       `json:"topic_name"`
	TopicMark []MarkDetail `json:"topic_mark"`
}

type GetResultReq struct {
	EventID        int64  `form:"event_id"`
	Search         string `form:"search"`
	SubcommitteeID int64  `form:"subcommittee_id"`
	FacultyID      int64  `form:"faculty_id"`
	Limit          int64  `form:"limit"`
	Offset         int64  `form:"offset"`
}

type GetResultRes struct {
	Result Result  `json:"result"`
	Topics []Topic `json:"topics"`
	Total  int     `json:"total"`
}
