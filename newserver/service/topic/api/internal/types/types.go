// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

type Department struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	FacultyID int64  `json:"facultyID"`
}

type Faculty struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type LectureInfo struct {
	ID     int64  `json:"id"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Phone  string `json:"phone"`
	Degree string `json:"degree"`
}

type StudentInfo struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
	Phone string `json:"phone"`
}

type Topic struct {
	ID              int64        `json:"id"`
	Name            string       `json:"name"`
	LectureInfo     LectureInfo  `json:"lectureInfo"`
	DepartmentID    int64        `json:"departmentID"`
	Status          int64        `json:"status"`
	EventId         Event        `json:"eventId"`
	SubcommitteeID  Subcommittee `json:"subcommitteeID"`
	TimeStart       int64        `json:"timeStart"`
	TimeEnd         int64        `json:"timeEnd"`
	GroupStudentId  int64        `json:"groupStudentId"`
	EstimateStudent int64        `json:"estimateStudent"`
	Description     string       `json:"description"`
}

type TopicMark struct {
	ID             int64        `json:"id"`
	Name           string       `json:"name"`
	SubcommitteeID Subcommittee `json:"subcommitteeID"`
	Mark           float64      `json:"mark"`
}

type Student struct {
	StudentID int64  `json:"studentID"`
	Name      string `json:"name"`
	EventID   int64  `json:"eventID"`
	GroupID   int64  `json:"groupID"`
}

type Event struct {
	ID         int64  `json:"id"`
	Name       string `json:"name"`
	SchoolYear string `json:"schoolYear"`
	IsCurrent  int64  `json:"isCurrent"`
}

type Subcommittee struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	FacultyID int64  `json:"facultyID"`
	EventID   int64  `json:"eventID"`
	Level     int64  `json:"level"`
}

type Report struct {
	ID          int64  `json:"id"`
	TopicID     int64  `json:"topicID"`
	StageID     int64  `json:"stageID"`
	Description string `json:"description"`
	CreatedAt   int64  `json:"createdAt"`
	CreatedBy   int64  `json:"createdBy"`
}

type Mark struct {
	ID          int64       `json:"id"`
	TopicID     int64       `json:"topicID"`
	LectureInfo LectureInfo `json:"lectureInfo"`
	Point       float64     `json:"point"`
	Comment     string      `json:"comment"`
	Url         string      `json:"url"`
	Level       int64       `json:"level"`
	CreatedAt   int64       `json:"createdAt"`
}

type GetDepartmentsReq struct {
	FacultyID int64 `form:"facultyID, optional"`
}

type GetDepartmentsRes struct {
	Result      Result       `json:"result"`
	Departments []Department `json:"departments"`
}

type CreateDepartmentReq struct {
	Name string `json:"name"`
}

type CreateDepartmentRes struct {
	Result Result `json:"result"`
}

type GetFacultiesReq struct {
}

type GetFacultiesRes struct {
	Result    Result    `json:"result"`
	Faculties []Faculty `json:"faculties"`
}

type CreateFacultyReq struct {
	Name      string `json:"name"`
	FacultyID int64  `json:"facultyID"`
}

type CreateFacultyRes struct {
	Result Result `json:"result"`
}

type CreateTopicReq struct {
	Name            string `json:"name"`
	LectureID       int64  `json:"lectureID"`
	DepartmentID    int64  `json:"departmentID"`
	EstimateStudent int64  `json:"estimateStudent"`
	Description     string `json:"description"`
}

type CreateTopicRes struct {
	Result Result `json:"result"`
}

type UpdateTopicReq struct {
	ID             int64  `path:"id"`
	Name           string `json:"name"`
	LectureID      int64  `json:"lectureID"`
	DepartmentID   int64  `json:"departmentID"`
	Status         int64  `json:"status"`
	EventID        int64  `json:"eventID"`
	SubcommitteeID int64  `json:"subcommitteeID"`
	GroupID        int64  `json:"groupID"`
	TimeStart      int64  `json:"timeStart"`
	TimeEnd        int64  `json:"timeEnd"`
	CashSupport    int64  `json:"cashSupport"`
	Description    string `json:"description"`
}

type UpdateTopicRes struct {
	Result Result `json:"result"`
}

type UpdateTopicStatusReq struct {
	ID     int64 `path:"id"`
	Status int64 `json:"status"`
}

type UpdateTopicStatusRes struct {
	Result Result `json:"result"`
}

type UpdateTopicSubcommitteeReq struct {
	ListTopicID    []int64 `json:"listTopicID"`
	SubcommitteeID int64   `json:"subcommitteeID"`
}

type UpdateTopicSubcommitteeRes struct {
	Result Result `json:"result"`
}

type UpdateTopicStudentGroupReq struct {
	ID        int64 `path:"id"`
	StudentID int64 `json:"studentID"`
}

type UpdateTopicStudentGroupRes struct {
	Result Result `json:"result"`
}

type GetTopicReq struct {
	ID int64 `path:"id"`
}

type GetTopicRes struct {
	Result       Result       `json:"result"`
	Topic        Topic        `json:"topic"`
	Event        Event        `json:"event"`
	Subcommittee Subcommittee `json:"subcommittee"`
	Reports      []Report     `json:"reports"`
	Marks        []Mark       `json:"marks"`
	ListStudent  []Student    `json:"listStudent"`
}

type DeleteStudentGroupbyStudentIdReq struct {
	StudentID int64 `path:"studentID"`
}

type DeleteStudentGroupbyStudentIdRes struct {
	Result Result `json:"result"`
}

type GetTopicsReq struct {
	Search         string `form:"search, optional"`
	DepartmentID   int64  `form:"departmentID, optional"`
	FacultyID      int64  `form:"facultyID, optional"`
	Status         int64  `form:"status, optional"`
	LectureID      int64  `form:"lectureID, optional"`
	StudentID      int64  `form:"studentID, optional"`
	IsCurrent      int64  `form:"isCurrent, optional"`
	EventID        int64  `form:"eventID, optional"`
	SubcommitteeID int64  `form:"subcommitteeID, optional"`
	TimeStart      int64  `form:"timeStart, optional"`
	TimeEnd        int64  `form:"timeEnd, optional"`
	Limit          int64  `form:"limit, optional"`
	Offset         int64  `form:"offset, optional"`
}

type GetTopicsRes struct {
	Result Result  `json:"result"`
	Total  int64   `json:"total"`
	Topics []Topic `json:"topic"`
}

type GetTopicMarkRes struct {
	Result    Result      `json:"result"`
	Total     int64       `json:"total"`
	TopicMark []TopicMark `json:"topicMark"`
}
