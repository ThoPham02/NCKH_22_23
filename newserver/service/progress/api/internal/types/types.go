// Code generated by goctl. DO NOT EDIT.
package types

type Result struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

type Notification struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	Url  string `json:"url"`
}

type Library struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Url   string `json:"url"`
	Owner string `json:"owner"`
}

type TopicReport struct {
	ID          int64  `json:"id"`
	TopicID     int64  `json:"topicID"`
	Description string `json:"description"`
	ReportUrl   string `json:"resultUrl"`
	StageID     int64  `json:"stageID"`
}

type Event struct {
	ID         int64   `json:"id"`
	Name       string  `json:"name"`
	SchoolYear string  `json:"schoolYear"`
	IsCurrent  int64   `json:"isCurrent"`
	Stages     []Stage `json:"stages"`
}

type Stage struct {
	ID           int64         `json:"id"`
	Name         string        `json:"name"`
	Description  string        `json:"description"`
	Url          string        `json:"url"`
	EventID      int64         `json:"eventID"`
	TimeStart    int64         `json:"timeStart"`
	TimeEnd      int64         `json:"timeEnd"`
	StageDetails []StageDetail `json:"stageDetails"`
}

type StageDetail struct {
	ID           int64  `json:"id"`
	Description  string `json:"description"`
	Url          string `json:"url"`
	StageID      int64  `json:"stageID"`
	DepartmentID int64  `json:"departmentID"`
	FacultyID    int64  `json:"facultyID"`
	Time         int64  `json:"time"`
}

type CreateTopicReportReq struct {
	TopicID     int64  `json:"topicID"`
	Description string `json:"description"`
	ReportUrl   string `json:"reportUrl"`
	StageID     int64  `json:"stageID"`
}

type CreateTopicReportRes struct {
	Result Result `json:"result"`
}

type GetTopicReportsReq struct {
	StageID int64 `form:"stageID, optional"`
	EventID int64 `form:"eventID, optional"`
	TopicID int64 `form:"topicID, optional"`
	Limit   int64 `form:"limit, optional"`
	Offset  int64 `form:"offset, optional"`
}

type GetTopicReportsRes struct {
	Result       Result        `json:"result"`
	Total        int64         `json:"total"`
	TopicReports []TopicReport `json:"topicReports"`
}

type CreateEventReq struct {
	Name       string `json:"name"`
	SchoolYear string `json:"schoolYear"`
}

type CreateEventRes struct {
	Result       Result `json:"result"`
	CurrentEvent Event  `json:"currentEvent"`
}

type GetEventsReq struct {
}

type GetEventsRes struct {
	Result Result  `json:"result"`
	Total  int64   `json:"total"`
	Events []Event `json:"events"`
}

type GetCurrentEventReq struct {
}

type GetCurrentEventRes struct {
	Result Result `json:"result"`
	Events Event  `json:"event"`
}

type UpdateCurrentEventReq struct {
	EventID int64 `path:"eventID"`
}

type UpdateCurrentEventRes struct {
	Result Result `json:"result"`
}

type CreateStageReq struct {
	Name        string `json:"name"`
	Description string `json:"description"`
	Url         string `json:"url"`
	EventID     int64  `json:"eventID"`
	TimeStart   int64  `json:"timeStart"`
	TimeEnd     int64  `json:"timeEnd"`
	FacultyID   int64  `json:"facultyID"`
}

type CreateStageRes struct {
	Result Result `json:"result"`
}

type GetStagesReq struct {
	EventID   int64 `form:"eventID, optional"`
	FacultyID int64 `form:"facultyID, optional"`
}

type GetStagesRes struct {
	Result Result  `json:"result"`
	Total  int64   `json:"total"`
	Stages []Stage `json:"stages"`
}

type UpdateStageReq struct {
	ID          int64  `path:"stage_id"`
	Description string `json:"description"`
	Url         string `json:"url"`
	TimeStart   int64  `json:"timeStart"`
	TimeEnd     int64  `json:"timeEnd"`
}

type UpdateStageRes struct {
	Result Result `json:"result"`
}

type CreateStageDetailReq struct {
	Description  string `json:"description"`
	Url          string `json:"url"`
	StageID      int64  `json:"stageID"`
	DepartmentID int64  `json:"departmentID"`
	FacultyID    int64  `json:"facultyID"`
	Time         int64  `json:"time"`
}

type CreateStageDetailRes struct {
	Result Result `json:"result"`
}

type CancelEventReq struct {
	ID int64 `path:"id"`
}

type CancelEventRes struct {
	Result Result `json:"result"`
}
